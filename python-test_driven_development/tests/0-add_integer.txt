This is a doctest file for testing the add_integer module

First import function
>>> add_integer = __import__('0-add_integer').add_integer

Test the addition function
>>> add_integer()
Traceback (most recent call last):
  ...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(2)
100
>>> add_integer(2.5, 108)
110
>>> add_integer('h', 5)
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer(1, '4')
Traceback (most recent call last):
  ...
TypeError: b must be an integer
>>> add_integer(1, 4.5)
5
>>> add_integer(2, 6)
8
>>> add_integer(2.0, 10.0)
12
>>> add_integer(float(2), float(5))
7
>>> add_integer(float(2), 112)
114
>>> add_integer(None)
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer(-2)
96
>>> add_integer(float('10'))
108
>>> add_integer(float('nan'))
Traceback (most recent call last):
  ...
ValueError: cannot convert float NaN to integer
>>> add_integer('nan', 5)
Traceback (most recent call last):
  ...
TypeError: a must be an integer