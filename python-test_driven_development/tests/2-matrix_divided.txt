This is a doctest file for testing the matrix_divided module

First import function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test the division function
>>> matrix = 1
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1,2], [3,4]]
>>> matrix_divided(matrix, 'two')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/holbertonschool-higher_level_programming/python-test_driven_development/2-matrix_divided.py", line 13, in matrix_divided
    validate_inputs(matrix, div)
  File "/root/holbertonschool-higher_level_programming/python-test_driven_development/2-matrix_divided.py", line 33, in validate_inputs
    raise TypeError("div must be a number")
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
>>> matrix = [2, 4]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [5, [1, 2]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1,2], [3,4,5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/holbertonschool-higher_level_programming/python-test_driven_development/2-matrix_divided.py", line 13, in matrix_divided
    validate_inputs(matrix, div)
  File "/root/holbertonschool-higher_level_programming/python-test_driven_development/2-matrix_divided.py", line 30, in validate_inputs
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

